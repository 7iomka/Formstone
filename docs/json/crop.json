{"main":["crop.js","crop.css"],"options":[{"name":"customClass","type":"string","default":"''","description":"Class applied to instance"},{"name":"theme","type":"string","default":"\"fs-light\"","description":"Theme class name"}],"events":[],"methods":[{"name":"defaults","description":"Extends plugin default settings; effects instances created hereafter.","params":[{"name":"options","type":"object","default":"{}","description":"New plugin defaults"}],"examples":["$.crop(\"defaults\", { ... });"]},{"name":"destroy","description":"Removes plugin instance.","examples":["$(\".target\").crop(\"destroy\");"]}],"name":"Crop","type":"widget","description":"A jQuery plugin for touch-friendly cropping.","dependencies":["jQuery","core.js","touch.js"],"css":[{"name":".fs-crop-element","type":"element","description":"Target elmement"},{"name":".fs-crop","type":"element","description":"Base widget class"},{"name":".fs-crop-enabled","type":"modifier","description":"Indicates enabled state"}],"use":"### Basic\n","demo":"<style>\r\n\t.cropper {\r\n\t\twidth:  600px;\r\n\t\theight: 600px;\r\n\r\n\t\tbackground: #eee;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\t.cropper .fs-crop-container {\r\n\t\toverflow: visible;\r\n\t}\r\n\r\n\t.cropper .fs-crop-container:after {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tz-index: 1;\r\n\r\n\t\tbox-shadow: 0 0 0 2px red;\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\tpointer-events: none;\r\n\t}\r\n</style>\r\n\r\n<script>\r\n\t$(document).ready(function() {\r\n\t\t$(\".js-crop\").crop({\r\n\t\t\twidth:  300,\r\n\t\t\theight: 300\r\n\t\t});\r\n\t})\r\n</script>\r\n\r\n<h4>Basic</h4>\r\n<div class=\"cropper js-crop\" data-crop-options='{\"source\":\"//spacehold.it/1200x2000/2.jpg\"}'></div>\r\n\r\n<br>\r\n\r\n<div class=\"cropper js-crop\" data-crop-options='{\"source\":\"//spacehold.it/2000x1200/2.jpg\"}'></div>","document":"# Crop\n\nA jQuery plugin for touch-friendly cropping.\n\n<!-- HEADER END -->\n\n<!-- NAV START -->\n\n* [Use](#use)\n* [Options](#options)\n* [Methods](#methods)\n* [CSS](#css)\n\n<!-- NAV END -->\n\n<!-- DEMO BUTTON -->\n\n## <a name=\"use\"></a> Using Crop\n\n\n#### Main\n\n```markup\ncrop.js\ncrop.css\n```\n\n\n#### Dependencies\n\n```markup\njQuery\ncore.js\ntouch.js\n```\n\n### Basic\n\n\n\n## <a name=\"options\"></a> Options\n\nSet instance options by passing a valid object at initialization, or to the public `defaults` method. Custom options for a specific instance can also be set by attaching a `data-crop-options` attribute to the target elment. This attribute should contain the properly formatted JSON object representing the custom options.\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `customClass` | `string` | `''` | Class applied to instance |\n| `theme` | `string` | `\"fs-light\"` | Theme class name |\n\n<hr>\n## <a name=\"methods\"></a> Methods\n\nMethods are publicly available to all active instances, unless otherwise stated.\n\n### defaults\n\nExtends plugin default settings; effects instances created hereafter.\n\n```javascript\n$.crop(\"defaults\", { ... });\n```\n\n#### Parameters\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `options` | `object` | `{}` | New plugin defaults |\n\n### destroy\n\nRemoves plugin instance.\n\n```javascript\n$(\".target\").crop(\"destroy\");\n```\n\n<hr>\n## <a name=\"css\"></a> CSS\n\n| Class | Type | Description |\n| --- | --- | --- |\n| `.fs-crop-element` | `element` | Target elmement |\n| `.fs-crop` | `element` | Base widget class |\n| `.fs-crop-enabled` | `modifier` | Indicates enabled state |\n\n"}