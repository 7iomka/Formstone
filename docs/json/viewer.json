{"main":["viewer.js","viewer.css"],"options":[{"name":"customClass","type":"string","default":"''","description":"Class applied to instance"},{"name":"lazy","type":"boolean","default":"false","description":"Lazy load with scroll"},{"name":"lazyEdge","type":"int","default":"100","description":"Lazy load edge"},{"name":"labels.count","type":"string","default":"'of'","description":"Gallery count separator text"},{"name":"labels.next","type":"string","default":"'Next'","description":"Gallery control text"},{"name":"labels.previous","type":"string","default":"'Previous'","description":"Gallery control text"},{"name":"labels.zoom_in","type":"string","default":"'Zoom In'","description":"Image zoom text"},{"name":"labels.zoom_out","type":"string","default":"'Zoom Out'","description":"Image zoom text"},{"name":"theme","type":"string","default":"\"fs-light\"","description":"Theme class name"}],"events":[{"name":"loaded.viewer","description":"Image loaded"},{"name":"ready.viewer","description":"Image ready"}],"methods":[{"name":"defaults","description":"Extends plugin default settings; effects instances created hereafter.","params":[{"name":"options","type":"object","default":"{}","description":"New plugin defaults"}],"examples":["$.viewer(\"defaults\", { ... });"]},{"name":"destroy","description":"Removes plugin instance.","examples":["$(\".target\").viewer(\"destroy\");"]},{"name":"load","description":"Loads source image","params":[{"name":"source","type":"string OR array","description":"Source image (string) or array of images (array)"}],"examples":["$(\".target\").viewer(\"load\", \"path/to/image.jpg\");","$(\".target\").viewer(\"load\", [\"path/to/image-1.jpg\",\"path/to/image-2.jpg\"]);"]},{"name":"unload","description":"Unloads current image","examples":["$(\".target\").viewer(\"unload\");"]}],"name":"Viewer","type":"widget","description":"A jQuery plugin for image exploration.","dependencies":["jQuery","core.js","touch.js","transition.js"],"css":[{"name":".fs-viewer-element","type":"element","description":"Target elmement"},{"name":".fs-viewer","type":"element","description":"Base widget class"}],"use":"### Basic\n","demo":"<h3>Basic</h3>\r\n\r\n<!-- START: FIRSTDEMO -->\r\n\r\n<style>\r\n\t.viewer {\n\t\twidth: 100%;\r\n\t\t/*height: 300px;*/\n\r\n\t\tmargin: 0 0 20px;\r\n\t}\r\n\r\n\t@media screen and (min-width: 740px) {\n\t\t.viewer {\n\t\t\t/*height: 500px;*/\n\t\t}\r\n\t}\r\n</style>\r\n\r\n<div class=\"demo_container\">\r\n\t<div class=\"demo_example\">\r\n\t\t<div class=\"viewer js-viewer\" data-viewer-options='{}'>\r\n\t\t\t<img src=\"//spacehold.it/1600x900/1.jpg\" alt=\"\">\r\n\t\t\t<img src=\"//spacehold.it/900x1600/2.jpg\" alt=\"\">\r\n\t\t</div>\r\n\r\n\t\t<div class=\"viewer js-viewer\" data-viewer-options='{}'>\r\n\t\t\t<img src=\"//spacehold.it/900x1600/2.jpg\" alt=\"\">\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"demo_code\">\r\n\t\t<pre><code class=\"language-html\">&lt;div class=\"viewer\"&gt;&lt;/div&gt;</code></pre>\n\t\t<pre><code class=\"language-javascript\">$(\".viewer\").viewer();</code></pre>\n\t</div>\r\n</div>\r\n\r\n<!-- END: FIRSTDEMO -->\r\n","document":"# Viewer\n\nA jQuery plugin for image exploration.\n\n<!-- HEADER END -->\n\n<!-- NAV START -->\n\n* [Use](#use)\n* [Options](#options)\n* [Events](#events)\n* [Methods](#methods)\n* [CSS](#css)\n\n<!-- NAV END -->\n\n<!-- DEMO BUTTON -->\n\n## <a name=\"use\"></a> Using Viewer\n\n\n#### Main\n\n```markup\nviewer.js\nviewer.css\n```\n\n\n#### Dependencies\n\n```markup\njQuery\ncore.js\ntouch.js\ntransition.js\n```\n\n### Basic\n\n\n\n## <a name=\"options\"></a> Options\n\nSet instance options by passing a valid object at initialization, or to the public `defaults` method. Custom options for a specific instance can also be set by attaching a `data-viewer-options` attribute to the target elment. This attribute should contain the properly formatted JSON object representing the custom options.\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `customClass` | `string` | `''` | Class applied to instance |\n| `lazy` | `boolean` | `false` | Lazy load with scroll |\n| `lazyEdge` | `int` | `100` | Lazy load edge |\n| `labels.count` | `string` | `'of'` | Gallery count separator text |\n| `labels.next` | `string` | `'Next'` | Gallery control text |\n| `labels.previous` | `string` | `'Previous'` | Gallery control text |\n| `labels.zoom_in` | `string` | `'Zoom In'` | Image zoom text |\n| `labels.zoom_out` | `string` | `'Zoom Out'` | Image zoom text |\n| `theme` | `string` | `\"fs-light\"` | Theme class name |\n\n<hr>\n## <a name=\"events\"></a> Events\n\nEvents are triggered on the target instance's element, unless otherwise stated.\n\n| Event | Description |\n| --- | --- |\n| `loaded.viewer` | Image loaded |\n| `ready.viewer` | Image ready |\n\n<hr>\n## <a name=\"methods\"></a> Methods\n\nMethods are publicly available to all active instances, unless otherwise stated.\n\n### defaults\n\nExtends plugin default settings; effects instances created hereafter.\n\n```javascript\n$.viewer(\"defaults\", { ... });\n```\n\n#### Parameters\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `options` | `object` | `{}` | New plugin defaults |\n\n### destroy\n\nRemoves plugin instance.\n\n```javascript\n$(\".target\").viewer(\"destroy\");\n```\n\n### load\n\nLoads source image\n\n```javascript\n$(\".target\").viewer(\"load\", \"path/to/image.jpg\");\n```\n```javascript\n$(\".target\").viewer(\"load\", [\"path/to/image-1.jpg\",\"path/to/image-2.jpg\"]);\n```\n\n#### Parameters\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| `source` | `string OR array` | &nbsp; | Source image (string) or array of images (array) |\n\n### unload\n\nUnloads current image\n\n```javascript\n$(\".target\").viewer(\"unload\");\n```\n\n<hr>\n## <a name=\"css\"></a> CSS\n\n| Class | Type | Description |\n| --- | --- | --- |\n| `.fs-viewer-element` | `element` | Target elmement |\n| `.fs-viewer` | `element` | Base widget class |\n\n"}