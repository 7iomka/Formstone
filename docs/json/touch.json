{"main":["touch.js"],"options":[{"name":"pan","type":"boolean || object","default":"false","description":"Object to enable"},{"name":"scale","type":"boolean","default":"false","description":"True to enable"},{"name":"tap","type":"boolean","default":"false","description":"True to enable"}],"events":[{"name":"tap","description":""},{"name":"panstart","description":""},{"name":"pan","description":""},{"name":"panend","description":""},{"name":"scalestart","description":""},{"name":"scale","description":""},{"name":"scaleend","description":""}],"methods":[{"name":"defaults","description":"Extends plugin default settings; effects instances created hereafter.","params":[{"name":"options","type":"object","default":"{}","description":"New plugin defaults"}],"example":"$.touch(\"defaults\", { ... });"},{"name":"destroy","description":"Removes plugin instance.","example":"$(\".target\").touch(\"destroy\");"}],"name":"Touch","type":"widget","description":"A jQuery plugin for multi-touch events.","dependencies":["core.js"],"use":"### Events\n\nTouch normalizes mouse and touch events in the context of a few basic gestures: `tap`, `pan` and `scale`. Events emitted by Touch will contain the following extra properties:\n\n| Key | Description |\n| --- | --- |\n| `pageX` | Current X position |\n| `pageY` | Current Y position |\n| `deltaX` | Change in X position |\n| `deltaY` | Change in Y position |\n| `scale` | Current scale value |\n\n### Tap\n\nTap creates a basic 'fast click' event. This synthesizes the touch and click events allowing fast mobile UIs without interupting the user's scroll:\n\n```javascript\n$(\".target\").touch({\n\ttap: true\n}).on(\"tap\", function(e) {\n\tconsole.log(\"Tapped\");\n});\n```\n\nNote: `tap` can not be used in conjunction with `pan` or `scale`.\n\n### Pan\n\nPan can be used for building touch-freindly drag and drop interfaces:\n\n```javascript\n$(\".target\").touch({\n\tpan: true\n}).on(\"panstart\", function(e) {\n\tconsole.log(\"Started panning\");\n}).on(\"pan\", function(e) {\n\tconsole.log(\"Panning\");\n}).on(\"panend\", function(e) {\n\tconsole.log(\"Stopped panning\");\n});\n```\n\n### Scale\n\nScale can be used for building touch-freindly scalable interfaces:\n\n```javascript\n$(\".target\").touch({\n\tscale: true\n}).on(\"scalestart\", function(e) {\n\tconsole.log(\"Started scaling\");\n}).on(\"scale\", function(e) {\n\tconsole.log(\"Scaling\");\n}).on(\"scaleend\", function(e) {\n\tconsole.log(\"Stopped scaling\");\n});\n```\n\nNote: `pan` and `scale` can also be used together to create a rich interface."}