
/**
 * @grid
 * @name Grid
 * @description A responsive CSS grid.
 */

	@import "imports/grid-config.less";
	@import "imports/grid-functions.less";

	// !Reset Box-sizing
	*,
	*:before,
	*:after {
		box-sizing: border-box;
	}

	.@{fs-grid-class-container} .@{fs-grid-class-row} {
		// !Row Default
		width: @fs-grid-width-min;

		margin-left: auto;
		margin-right: auto;

		&:after {
			height: 0;

			clear: both;
			content: ".";
			display: block;
			line-height: 0;
			visibility: hidden;
		}

		.@{fs-grid-class-row} {
			width: 100% + (@fs-grid-gutter * 2);

			margin-left: -@fs-grid-gutter;
			margin-right: -@fs-grid-gutter;
		}

		.@{fs-grid-class-contained} .@{fs-grid-class-row} {
			width: 100%;

			margin-left: 0;
			margin-right: 0;
		}

		// !All Cells
		.@{fs-grid-class-cell} {
			.column(1, @fs-grid-gutter, 1);

			float: left;
			margin-left: @fs-grid-gutter;
			margin-right: @fs-grid-gutter;
		}

		// !Padded Cells
		.@{fs-grid-class-cell}.@{fs-grid-class-padded} {
			box-sizing: content-box;
			margin-left: 0;
			margin-right: 0;
			padding-left: @fs-grid-gutter;
			padding-right: @fs-grid-gutter;
		}

		// !Contained Cells
		.@{fs-grid-class-cell}.@{fs-grid-class-contained} {
			margin-left: 0;
			margin-right: 0;
		}

		// !Right Cells
		.@{fs-grid-class-cell}.right {
			float: right;
		}
	}

	// !Rows, Thinest to Widest
	@media screen and (min-width: @fs-grid-width-break-small) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			width: @fs-grid-width-small;
		}
	}

	@media screen and (min-width: @fs-grid-width-break-medium) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			width: @fs-grid-width-medium;
		}
	}

	@media screen and (min-width: @fs-grid-width-break-large) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			width: @fs-grid-width-large;
		}
	}

	@media screen and (min-width: @fs-grid-width-break-max) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			width: @fs-grid-width-max;
		}
	}

	// !Fluid Grid
	.@{fs-grid-class-container}-fluid .@{fs-grid-class-row} {
		width: 98%;
	}

	// !Fluid Grid - Small Only
	@media screen and (max-width: (@fs-grid-width-break-medium - 1px)) {
		.@{fs-grid-class-container}-small-fluid .@{fs-grid-class-row} {
			width: 98%;
		}
	}

	// !All
	.@{fs-grid-class-container} .@{fs-grid-class-row} {
		.generateGridBase(@fs-grid-class-all);
	}

	// !Small, 540 (max 740)
	@media screen and (max-width: (@fs-grid-width-break-medium - 1px)) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			.generateGrid(@fs-grid-class-small, @fs-grid-columns-small);

			.generateGridBase(@fs-grid-class-small);
		}
	}

	// !Min, 300 (max 500)
	@media screen and (max-width: (@fs-grid-width-break-small - 1px)) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			.generateGrid(@fs-grid-class-min, @fs-grid-columns-small);

			.generateGridBase(@fs-grid-class-min);
		}
	}

	// !Medium, 6 column, 720 (min 740)
	@media screen and (min-width: @fs-grid-width-break-medium) and (max-width: (@fs-grid-width-break-large - 1px)) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			.generateGrid(@fs-grid-class-medium, @fs-grid-columns-medium);

			.generateGridBase(@fs-grid-class-medium);
		}
	}

	// !Large, 12 column, 960 (min 980)
	@media screen and (min-width: @fs-grid-width-break-large) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			.generateGrid(@fs-grid-class-large, @fs-grid-columns-large);

			.generateGridBase(@fs-grid-class-large);
		}
	}

	// !Max, 12 column, 1200 (min 1220)
	@media screen and (min-width: @fs-grid-width-break-max) {
		.@{fs-grid-class-container} .@{fs-grid-class-row} {
			.generateGrid(@fs-grid-class-max, @fs-grid-columns-large);

			.generateGridBase(@fs-grid-class-max);
		}
	}